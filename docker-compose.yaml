version: '3.5'

services:
  tmp-buggregator:
    container_name: tmp-buggregator
    image: ghcr.io/buggregator/server:1.13
    restart: always
    networks:
      - tmp-network
    ports:
      - ${BUGGREGATOR_VAR_DUMPER_PORT:-9912}:9912
      - ${BUGGREGATOR_HTTP_PORT:-8000}:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tmp-buggregator.entrypoints=web"
      - "traefik.http.routers.tmp-buggregator.rule=Host(`buggregator.tmp.localhost`)"
      - "traefik.http.services.tmp-buggregator.loadbalancer.server.port=8000"
    logging:
      driver: none

  tmp-reverse-proxy:
    container_name: tmp-reverse-proxy
    image: traefik:v2.9
    restart: always
    command:
      - "--accesslog"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
    ports:
      - ${TRAEFIC_PORT_HTTP:-80}:80
      - ${TRAEFIC_PORT_DASHBOARD_HTTP:-8004}:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tmp-reverse-proxy.entrypoints=web"
      - "traefik.http.routers.tmp-reverse-proxy.rule=Host(`traefik.tmp.localhost`)"
      - "traefik.http.services.tmp-reverse-proxy.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/traefik/configuration:/configuration/
      - ./.docker/traefik/certs:/etc/certs:ro
    networks:
      - tmp-network
    logging:
      driver: none

networks:
  tmp-network:
    driver: bridge
    name: tmp-network
